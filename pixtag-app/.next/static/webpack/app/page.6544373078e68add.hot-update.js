"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/authDetails.ts":
/*!****************************!*\
  !*** ./src/authDetails.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   query1Call: function() { return /* binding */ query1Call; },\n/* harmony export */   query2Call: function() { return /* binding */ query2Call; }\n/* harmony export */ });\n/* harmony import */ var aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aws-amplify/auth */ \"(app-pages-browser)/./node_modules/@aws-amplify/core/dist/esm/singleton/apis/fetchAuthSession.mjs\");\n\n// export const getCredentials = async () => {\n//   const session = await fetchAuthSession();\n//   if (session.tokens) {\n//     console.log(\"id token\", session.tokens.idToken);\n//     console.log(\"access token\", session.tokens.accessToken);\n//   }\n//   const response = await fetch(\n//     \"https://wnwp3hn26g.execute-api.ap-southeast-2.amazonaws.com/pixtag-test1/api/pixtag\",\n//     {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${session.tokens?.idToken}`,\n//       },\n//     }\n//   );\n//   if (response.ok) {\n//     const data = await response.json();\n//     console.log(\"Response data:\", data);\n//   } else {\n//     console.error(\"Failed to fetch data:\", response.statusText);\n//   }\n// };\nconst query2Call = async (thumbnail_url)=>{\n    var _session_tokens;\n    const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.fetchAuthSession)();\n    if (session.tokens) {\n        console.log(\"id token\", session.tokens.idToken);\n        console.log(\"access token\", session.tokens.accessToken);\n    }\n    const url = new URL(\"https://wnwp3hn26g.execute-api.ap-southeast-2.amazonaws.com/pixtag-test1/api/pixtag\");\n    url.searchParams.append(\"thumbnail_url\", thumbnail_url);\n    const response = await fetch(url.toString(), {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \".concat((_session_tokens = session.tokens) === null || _session_tokens === void 0 ? void 0 : _session_tokens.idToken)\n        }\n    });\n    if (response.ok) {\n        const data = await response.json();\n        return data;\n    } else {\n        throw new Error(response.statusText);\n    }\n};\nconst query1Call = async (tags, counts)=>{\n    var _session_tokens;\n    const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.fetchAuthSession)();\n    if (session.tokens) {\n        console.log(\"id token\", session.tokens.idToken);\n        console.log(\"access token\", session.tokens.accessToken);\n    }\n    const tag_values = tags.split(\",\");\n    const count_values = counts.split(\",\");\n    // Function to zip two arrays and handle different lengths\n    const zipArrays = (arr1, arr2)=>{\n        const maxLength = Math.max(arr1.length, arr2.length);\n        const result = [];\n        for(let i = 0; i < maxLength; i++){\n            const element1 = arr1[i] || null;\n            const element2 = arr2[i] ? parseInt(arr2[i], 10) : null;\n            result.push([\n                element1,\n                element2\n            ]);\n        }\n        return result;\n    };\n    // Create a list of lists with elements at the same index from both arrays\n    const combinedList = zipArrays(tag_values, count_values);\n    console.log(combinedList);\n    const url = new URL(\"https://wnwp3hn26g.execute-api.ap-southeast-2.amazonaws.com/pixtag-test1/api/pixtag\");\n    const body = {\n        tags: combinedList\n    };\n    const response = await fetch(url.toString(), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \".concat((_session_tokens = session.tokens) === null || _session_tokens === void 0 ? void 0 : _session_tokens.idToken)\n        },\n        body: JSON.stringify(body)\n    });\n    if (response.ok) {\n        console.log(response);\n        const data = await response.json();\n        return data;\n    } else {\n        throw new Error(response.statusText);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/authDetails.ts\n"));

/***/ })

});